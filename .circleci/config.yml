# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Declare a dependency on the welcome-orb
  welcome: circleci/welcome-orb@0.4.1

parameters:
  old_pipeline_id:
    type: string
    default: "lastproductionbucket"

commands:
  set_region:
    steps:
      - run: aws configure set default.region $AWS_DEFAULT_REGION
      - run: aws configure set aws_access_key_if $AWS_ACCESS_KEY_ID
      - run: aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY

jobs:
  create_and_deploy_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - set_region 
      - run:
          name: run bucket.yml file to create/update stack for new S3.
          command: >-
            aws cloudformation deploy
            --template-file bucket.yml
            --stack-name "id-${CIRCLE_WORKFLOW_ID:0:7}" 
            --parameter-overrides NAME="id-${CIRCLE_WORKFLOW_ID:0:7}"
      - run:
          name: copy updated index.html file to new S3 bucket.
          command: >-
            aws s3 cp index.html 
            "s3://id-${CIRCLE_WORKFLOW_ID:0:7}/index.html"

  get_last_deployment_id:
    docker:
      - image: amazon/aws-cli
    steps:
      - run:
          name: update for yum
          command: yum update
      - run:
          name: install tar to use persist_to_workspace step
          command: yum install -y tar gzip
      - run:
          name: "Retrieve last production deployment ID using list-exports function"
          command: >-
            aws cloudformation list-exports
            --query "Exports[?Name==\`PipelineID\`].Value"
            --no-paginate 
            --output text > text
      - persist_to_workspace:
          root: .
          paths:
            - text

  promote_to_production:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - set_region
      - run:
          name: Deploy using same stack with new pipelineID
          command: >-
            aws cloudformation deploy
            --template-file cloudfront.yml
            --stack-name production-distro
            --parameter-overrides PipelineID="id-${CIRCLE_WORKFLOW_ID:0:7}"

  clean_up_old_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - set_region
      - run:
          name: update for yum
          command: yum update
      - run:
          name: install tar to use persist_to_workspace step
          command: yum install -y tar gzip
      - attach_workspace:
          at: .
      - run:
          name: Remove old version S3 bucket.
          command: aws s3 rm "s3://${old_pipeline_id}" --recursive
      - run:
          name: Delete new stack which was made for production testing
          command: >-
            aws cloudformation delete-stack
            --stack-name "$(<text)"

# Orchestrate or schedule a set of jobs
workflows:
  # Name the workflow "welcome"
  welcome:
    # Run the welcome/run job in its own container
    jobs:
      #- welcome/run
      - create_and_deploy_front_end
      - get_last_deployment_id:
          requires:
            - create_and_deploy_front_end
      - promote_to_production:
          requires:
            - get_last_deployment_id
      - clean_up_old_front_end:
          requires:
            - promote_to_production
